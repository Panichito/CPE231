# Generated by Django 4.0.4 on 2022-05-14 07:27

import cloudinary.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Hotel_Name', models.CharField(max_length=50)),
                ('Hotel_Address', models.TextField()),
                ('Hotel_Detail', models.TextField()),
                ('Hotel_Pic', cloudinary.models.CloudinaryField(blank=True, default=None, max_length=255, null=True, verbose_name='hotel')),
            ],
            options={
                'db_table': 'hotel',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Member_NIC', models.CharField(blank=True, max_length=25, null=True)),
                ('Member_Tel', models.CharField(blank=True, max_length=25, null=True)),
                ('Member_Point', models.IntegerField(default=0)),
                ('Member_Address', models.TextField(blank=True, null=True)),
                ('Member_Pic', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='profile')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('News_Name', models.CharField(max_length=50)),
                ('News_Detail', models.TextField()),
                ('News_Pic', cloudinary.models.CloudinaryField(blank=True, default=None, max_length=255, null=True, verbose_name='news')),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Payment_Date', models.DateTimeField(default=datetime.datetime.now)),
                ('Payment_Allprice', models.FloatField()),
                ('Payment_Vat10', models.FloatField()),
                ('Payment_Banking', models.CharField(max_length=20)),
                ('Payment_Slip', cloudinary.models.CloudinaryField(blank=True, default=None, max_length=255, null=True, verbose_name='slip')),
                ('Payment_Status', models.BooleanField(default=False)),
                ('Payment_Confirm', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Promotion_Name', models.CharField(max_length=50)),
                ('Promotion_Detail', models.TextField()),
                ('Promotion_Discount', models.FloatField()),
                ('Promotion_Start', models.DateTimeField()),
                ('Promotion_End', models.DateTimeField()),
                ('Promotion_Pic', cloudinary.models.CloudinaryField(blank=True, default=None, max_length=255, null=True, verbose_name='promotion')),
            ],
            options={
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Room_Number', models.CharField(max_length=20)),
                ('Room_Status', models.BooleanField(default=1)),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.hotel')),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type_Name', models.CharField(max_length=50)),
                ('Type_Pernight', models.IntegerField()),
                ('Type_Capacity', models.PositiveSmallIntegerField(default=1)),
                ('Type_Detail', models.TextField()),
                ('Type_Pic', cloudinary.models.CloudinaryField(blank=True, default=None, max_length=255, null=True, verbose_name='roomdemo')),
            ],
            options={
                'db_table': 'roomtype',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Transaction_Detail', models.TextField(default='Reserved')),
                ('Transaction_Night', models.IntegerField(default=1)),
                ('Transaction_Price', models.IntegerField(default=0)),
                ('Transaction_Review', models.BooleanField(default=False)),
                ('Transaction_Rating', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('Transaction_Comment', models.TextField(blank=True, null=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.member')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.payment')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.room')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Staff_Position', models.CharField(choices=[('ADMIN', 'ADMIN'), ('MANAGER', 'MANAGER'), ('STAFF', 'STAFF')], default='STAFF', max_length=10)),
                ('Staff_Start', models.DateField(default=datetime.date.today)),
                ('Staff_Level', models.PositiveSmallIntegerField(default=1)),
                ('Staff_Status', models.BooleanField(default=1)),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.hotel')),
                ('member', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.member')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.AddField(
            model_name='room',
            name='roomtype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.roomtype'),
        ),
        migrations.AddField(
            model_name='payment',
            name='promotion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.promotion'),
        ),
        migrations.CreateModel(
            name='GetNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.member')),
                ('news', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='HotelApp.news')),
            ],
            options={
                'db_table': 'getnews',
            },
        ),
    ]
